;; VARIABLES
(deflisten v_workspaces :initial "[]" "scripts/workspaces.sh")
(defpoll v_updatable_packages :interval "20m" :initial "0" "yay -Qu | wc -l")
(defpoll v_brightness :interval "1s" :initial "100" "brightnessctl get | awk '{printf \"%.0f\" , $1/2.55}'")
(defpoll v_sink_volume :interval "1s" :initial "100" "wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2*100}'")
(defpoll v_time :interval "1s" :initial "{}" "jq -nc --arg clock \"$(date '+%H:%M')\" --arg date \"$(date '+%a %d/%m/%Y')\" '{clock: $clock, date: $date}'")
(defvar v_brightness_reveal false)
(defvar v_volume_reveal false)
(defvar v_battery_reveal false)
(defvar v_time_reveal false)

;; MODULES
;; workspaces
(defwidget workspaces []
  (eventbox :onscroll "hyprctl dispatch workspace $(awk 'BEGIN {print (\"{}\" == \"up\" ? \"e+1\" : \"e-1\")}')"
    (box :class "module workspaces" :orientation "h" :spacing 0 :space-evenly false
      (for ws in v_workspaces
        (button :class `${(ws.active ? "active " : " ") + (ws.windows > 0 ? "occupied " : " ") + "workspace_btn"}`
          :tooltip "Workspace ${ws.name}"
          :onclick "hyprctl dispatch workspace ${ws.id}"
          "${ws.name}"
        )
      )
    )
  )
)
;; updatable packages
(defwidget packages []
  (box :class "module packages_wrapper" :orientation "h" :spacing 0 :space-evenly false
    (label :class "packages" :tooltip "${v_updatable_packages} updatable package(s)" :text " ${v_updatable_packages}")
  )
)
;; system tray
(defwidget system_tray []
  (box :class "module systray_wrapper" :orientation "h" :spacing 0 :space-evenly false
    (systray :class "systray" :orientation "h" :spacing 8 :icon-size 16)
  )
)
;; brightness
(defwidget brightness []
  (eventbox :onhover "eww update v_brightness_reveal=true" :onhoverlost "eww update v_brightness_reveal=false"
    (box :class "module brightness" :orientation "h" :spacing 0 :space-evenly false :tooltip "Brightness on ${v_brightness}%"
      (label :text "")
      (revealer :transition "slideleft" :reveal v_brightness_reveal :duration "350ms"
        (scale :orientation "h" :value v_brightness :min 0 :max 101 :round-digits 0 :width 75
          :onchange "brightnessctl set $(awk 'BEGIN {print {}*2.55}')"
        )
      )
    )
  )
)
;; volume
(defwidget volume []
  (eventbox :onhover "eww update v_volume_reveal=true" :onhoverlost "eww update v_volume_reveal=false"
    (box :class "module volume" :orientation "h" :spacing 0 :space-evenly false :tooltip "Volume on ${v_sink_volume}%"
      (label :text `${v_sink_volume > 60 ? "" : (v_sink_volume > 20 ? "" : (v_sink_volume > 0 ? "" : ""))}`)
      (revealer :transition "slideleft" :reveal v_volume_reveal :duration "350ms"
        (scale :orientation "h" :value v_sink_volume :min 0 :max 101 :round-digits 0 :width 75
          :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ -l 1 $(awk 'BEGIN {print {}/100}')"
        )
      )
    )
  )
)
;; battery
(defwidget battery []
  (eventbox :onhover "eww update v_battery_reveal=true" :onhoverlost "eww update v_battery_reveal=false"
    (box :class "module battery" :orientation "h" :spacing 0 :space-evenly false :tooltip "Volume on ${EWW_BATTERY.BAT1.capacity}% (${EWW_BATTERY.BAT1.status})"
      (label :text `${EWW_BATTERY.BAT1.capacity > 80 ? "" : (EWW_BATTERY.BAT1.capacity > 60 ? "" : (EWW_BATTERY.BAT1.capacity > 20 ? "" : ""))}`)
      (revealer :transition "slideleft" :reveal v_battery_reveal :duration "350ms"
        (label :class "percentage" :text "${EWW_BATTERY.BAT1.capacity}%")
      )
    )
  )
)
;; time
(defwidget time []
  (eventbox :onhover "eww update v_time_reveal=true" :onhoverlost "eww update v_time_reveal=false"
    (box :class "time" :orientation "h" :spacing 0 :space-evenly false
      (label :class "time_clock" :show-truncated false :text "${v_time.clock}")
      (revealer :transition "slideleft" :reveal v_time_reveal :duration "350ms"
        (box :orientation "h" :spacing 0 :space-evenly false
          (label :class "time_sep" :text "")
          (label :class "time_date" :show-truncated false :text "${v_time.date}")
        )
      )
    )
  )
)

;;
(defwidget modules [halign]
  (box :class "modules" :orientation "h" :spacing 8 :space-evenly false :halign halign (children))
)

;; WINDOWS
(defwindow taskbar
  :monitor 0 :geometry (geometry :x "0px" :y "0px" :width "100%" :height "38px" :anchor "top center")
  :stacking "bg" :exclusive true :focusable false
  (centerbox :class "taskbar" :orientation "h" :spacing 20 :space-evenly true
    (modules :halign "start"
      (workspaces)
    )
    (modules :halign "center"
      ""
    )
    (modules :halign "end"
      (packages)
      (system_tray)
      (brightness)
      (volume)
      (battery)
      (time)
    )
  )
)
